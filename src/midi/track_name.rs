use std::str::FromStr;

#[derive(Debug, Hash, Eq, PartialEq)]
pub enum MoonTrackName {
    Meta,
    Events,
    Beat,
    Venue,
    Guitar,
    Gh1Guitar,
    GuitarCoop,
    Bass,
    Rhythm,
    Keys,
    ProGuitar17Fret,
    ProGuitar22Fret,
    ProBass17Fret,
    ProBass22Fret,
    Drums,
    Drums2,
    DrumsReal,
    GhlGuitar,
    GhlBass,
    GhlRhythm,
    GhlGuitarCoop,
    Vocals,
    Harmony1,
    Harmony2,
    Harmony3,
    Harmony1_2,
    Harmony2_2,
    Harmony3_2,
    ProKeysExpert,
    ProKeysHard,
    ProKeysMedium,
    ProKeysEasy,
}

impl FromStr for MoonTrackName {
    type Err = ();

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "BEAT" => Ok(MoonTrackName::Beat),
            "EVENTS" => Ok(MoonTrackName::Events),
            "VENUE" => Ok(MoonTrackName::Venue),
            "PART GUITAR" => Ok(MoonTrackName::Guitar),
            "T1 GEMS" => Ok(MoonTrackName::Gh1Guitar),
            "PART GUITAR COOP" => Ok(MoonTrackName::GuitarCoop),
            "PART BASS" => Ok(MoonTrackName::Bass),
            "PART RHYTHM" => Ok(MoonTrackName::Rhythm),
            "PART KEYS" => Ok(MoonTrackName::Keys),
            "PART REAL_GUITAR" => Ok(MoonTrackName::ProGuitar17Fret),
            "PART REAL_GUITAR_22" => Ok(MoonTrackName::ProGuitar22Fret),
            "PART REAL_BASS" => Ok(MoonTrackName::ProBass17Fret),
            "PART REAL_BASS_22" => Ok(MoonTrackName::ProBass22Fret),
            "PART DRUMS" => Ok(MoonTrackName::Drums),
            "PART DRUM" => Ok(MoonTrackName::Drums2),
            "PART REAL_DRUMS_PS" => Ok(MoonTrackName::DrumsReal),
            "PART GUITAR GHL" => Ok(MoonTrackName::GhlGuitar),
            "PART BASS GHL" => Ok(MoonTrackName::GhlBass),
            "PART RHYTHM GHL" => Ok(MoonTrackName::GhlRhythm),
            "PART GUITAR COOP GHL" => Ok(MoonTrackName::GhlGuitarCoop),
            "PART VOCALS" => Ok(MoonTrackName::Vocals),
            "HARM1" => Ok(MoonTrackName::Harmony1),
            "HARM2" => Ok(MoonTrackName::Harmony2),
            "HARM3" => Ok(MoonTrackName::Harmony3),
            "PART HARM1" => Ok(MoonTrackName::Harmony1_2),
            "PART HARM2" => Ok(MoonTrackName::Harmony2_2),
            "PART HARM3" => Ok(MoonTrackName::Harmony3_2),
            "PART REAL_KEYS_X" => Ok(MoonTrackName::ProKeysExpert),
            "PART REAL_KEYS_H" => Ok(MoonTrackName::ProKeysHard),
            "PART REAL_KEYS_M" => Ok(MoonTrackName::ProKeysMedium),
            "PART REAL_KEYS_E" => Ok(MoonTrackName::ProKeysEasy),
            _ => Ok(MoonTrackName::Meta),
        }
    }
}
